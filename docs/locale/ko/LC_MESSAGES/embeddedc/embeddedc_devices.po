# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-13 10:29+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\docs\embeddedc\embeddedc_devices.rst:2
msgid "Embedded C Client Library - Devices and Applications"
msgstr ""
"Embedded C 클라이언트 라이브러리 - 디바이스 및 애플리케이션"

#: ..\docs\embeddedc\embeddedc_devices.rst:4
msgid "This client library describes how to use devices with the embedded c iotfclient library. For help with getting started, see `Embedded C Client Library - Introduction <https://docs.internetofthings.ibmcloud.com/embeddedc/embedcintro.html#/>`__."
msgstr ""
"이 클라이언트 라이브러리는 Embedded C iotfclient 라이브러리를 가진 디바이스를 사용하는 방법에 대해 설명합니다. 시작하는 방법은 `Embedded C Client Library - Introduction(<https://docs.internetofthings.ibmcloud.com/embeddedc/embedcintro.html#/>)`을 참조하십시오. "

#: ..\docs\embeddedc\embeddedc_devices.rst:6
msgid "This client library contains information on how devices publish events and handle commands and how applications can use the embedded c client library to interact with devices."
msgstr ""
"이 클라이언트 라이브러리에는 디바이스가 이벤트를 공개하고 명령을 처리하는 방법과 애플리케이션이 Embedded C 클라이언트 라이브러리를 사용하여 디바이스와 상호작용하는 방법에 대한 정보가 포함되어 있습니다. "

#: ..\docs\embeddedc\embeddedc_devices.rst:9
msgid "Handling commands"
msgstr ""
"명령 처리"

#: ..\docs\embeddedc\embeddedc_devices.rst:11
msgid "When the device client connects, it automatically subscribes to any command for this device. To process specific commands you need to register a command callback function by calling the function 'setCommandHandler'. The commands are returned as:"
msgstr ""
"디바이스 클라이언트는 연결되면 이 디바이스에 대한 명령을 자동으로 구독합니다. 특정 명령을 처리하려면 'setCommandHandler' 함수를 호출하여 명령 콜백 함수를 등록해야 합니다. 이 명령은 다음과 같이 리턴됩니다. "

#: ..\docs\embeddedc\embeddedc_devices.rst:13
msgid "commandName - name of the command invoked"
msgstr ""
"commandName - 호출된 명령의 이름"

#: ..\docs\embeddedc\embeddedc_devices.rst:14
msgid "format - e.g json, xml"
msgstr ""
"형식 - 예: json, xml"

#: ..\docs\embeddedc\embeddedc_devices.rst:15
msgid "payload"
msgstr ""
"페이로드"

#: ..\docs\embeddedc\embeddedc_devices.rst:36
msgid "**Note** : The 'yield' function must be called periodically to receive commands."
msgstr ""
"**참고** : 명령을 수신하기 위해 'yield' 함수를 주기적으로 호출해야 합니다. "

#: ..\docs\embeddedc\embeddedc_devices.rst:39
msgid "Publishing events"
msgstr ""
"이벤트 공개"

#: ..\docs\embeddedc\embeddedc_devices.rst:41
msgid "Events can be published by using:"
msgstr ""
"다음을 사용하여 이벤트를 공개할 수 있습니다. "

#: ..\docs\embeddedc\embeddedc_devices.rst:43
msgid "eventType - Type of event to be published e.g status, gps"
msgstr ""
"eventType - 공개할 이벤트의 유형(예: 상태, gps)"

#: ..\docs\embeddedc\embeddedc_devices.rst:44
msgid "eventFormat - Format of the event e.g json"
msgstr ""
"eventFormat - 이벤트의 형식(예: json)"

#: ..\docs\embeddedc\embeddedc_devices.rst:45
msgid "data - Payload of the event"
msgstr ""
"데이터 - 이벤트의 페이로드"

#: ..\docs\embeddedc\embeddedc_devices.rst:46
msgid "QoS - qos for the publish event. Supported values : QOS0, QOS1, QOS2"
msgstr ""
"QoS - 이벤트 공개에 대한 qos. 지원되는 값: QOS0, QOS1, QOS2"


# 
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-06 15:22+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\docs\libraries\python_cli_for_apps.rst:3
msgid "Python Client Library - Applications"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:6
msgid "Introduction"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:8
msgid ""
"This client library describes how to use applications with the python "
"ibmiotf module. For help with getting started with this module, see `Python "
"Client Library - Introduction "
"<https://docs.internetofthings.ibmcloud.com/libraries/python.html#/>`__."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:10
msgid ""
"This client library is divided into two sections, both included within the "
"library. This section contains information on how applications interact with"
" devices using the Python ibmiotf module, and the Devices section contains "
"information on how devices can use the ibmiotf module publish events and "
"handle commands."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:13
msgid "Constructor"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:15
msgid ""
"The constructor builds the client instance, and accepts an options dict "
"containing the following definitions:"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:17
msgid "org - Your organization ID."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:18
msgid "id - The unique ID of your application within your organization."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:19
msgid ""
"auth-method - Method of authentication (the only value currently supported "
"is \"apikey\")."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:20
msgid "auth-key - API key (required if auth-method is \"apikey\")."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:21
msgid "auth-token - API key token (required if auth-method is \"apikey\")."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:23
msgid ""
"If no options dict is provided, the client will connect to the Internet of "
"Things Foundation Quickstart, and default to an unregistered device. The "
"options dict creates definitions which are used to interact with the "
"Internet of Things Foundation module."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:42
msgid "Using a configuration file"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:44
msgid ""
"Instead of including an options dict directly, you can use a configuration "
"file containing an options dict. If you are using a configuration file "
"containing an options dict, use the following code format."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:55
msgid "The application configuration file must be in the following format:"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:71
msgid "Subscribing to device events"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:72
msgid ""
"Events are the mechanism by which devices publish data to the Internet of "
"Things Foundation. The device controls the content of the event and assigns "
"a name for each event it sends."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:74
msgid ""
"When an event is received by the IOT Foundation the credentials of the "
"connection on which the event was received are used to determine from which "
"device the event was sent. With this architecture it is impossible for a "
"device to impersonate another device."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:76
msgid ""
"By default, applications will subscribe to all events from all connected "
"devices. Use the type, id, event and msgFormat parameters to control the "
"scope of the subscription. A single client can support multiple "
"subscriptions. The code samples below give examples of how to subscribe to "
"devices dependent on device type, id, event and msgFormat parameters."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:80
msgid "To subscribe to all events from all devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:89
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:98
msgid "To subscribe to a specific event from all devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:107
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:117
msgid "To subscribe to all events published by a device in json format"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:128
msgid "Handling events from devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:129
msgid ""
"To process the events received by your subscroptions you need to register an"
" event callback method. The messages are returned as an instance of the "
"Event class:"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:131
msgid ""
"event.device - string (uniquely identifies the device across all types of "
"devices in the organization)"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:132
msgid "event.deviceType - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:133
msgid "event.deviceId - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:134
msgid "event.event - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:135
msgid "event.format - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:136
msgid "event.data - dict"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:137
msgid "event.timestamp - datetime"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:155
msgid "Subscribing to device status"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:156
msgid ""
"By default, this will subscribe to status updates for all connected devices."
" Use the type and id parameters to control the scope of the subscription. A "
"single client can support multiple subscriptions."
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:159
msgid "Subscribe to status updates for all devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:168
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:177
msgid "Subscribe to status updates for two different devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:190
msgid "Handling status updates from devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:191
msgid ""
"To process the status updates received by your subscriptions you need to "
"register an event callback method. The messages are returned as an instance "
"of the Status class:"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:195
msgid ""
"The following properties are set for both \"Connect\" and \"Disconnect\" "
"status events:"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:198
msgid "status.clientAddr - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:199
msgid "status.protocol - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:200
msgid "status.clientId - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:201
msgid "status.user - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:202
msgid "status.time - datetime"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:203
msgid "status.action - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:204
msgid "status.connectTime - datetime"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:205
msgid "status.port - int"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:207
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:209
msgid "status.writeMsg - int"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:210
msgid "status.readMsg - int"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:211
msgid "status.reason - string"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:212
msgid "status.readBytes - int"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:213
msgid "status.writeBytes - int"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:234
msgid "Publishing events from devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:235
msgid "Applications can publish events as if they originated from a Device"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:248
msgid "Publishing commands to devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:249
msgid "Applications can publish commands to connected devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:262
msgid "Retrieve device details"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:265
msgid "Retrieve details of all registered devices"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:274
msgid "Retrieve details of a specific device"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:286
msgid "Register a new device"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:299
msgid "Delete a device"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:313
msgid "Access historical event data"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:316
msgid "Get historical event data for a specific device"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:325
msgid "Get historical event data for all devices of a specific type"
msgstr ""

#: ..\docs\libraries\python_cli_for_apps.rst:334
msgid "Get historical event data for all devices of all types"
msgstr ""

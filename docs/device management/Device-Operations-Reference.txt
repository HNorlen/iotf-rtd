====================================
Managed Device Operations Specifics
====================================

Action Details
---------------

Manage Device
''''''''''''''

A device uses this request to become a managed device. It should be the first device management request sent by the device after connecting to the Internet of Things Foundation. It would be usual for a device management agent to send this whenever is starts or restarts. 

Topic
~~~~~~

.. code:: 

	iotdevice-1/mgmt/managed
	
Message Format
~~~~~~~~~~~~~~~~

For the request, the "d" field and all of its sub-fields are optional. The "metadata" and "deviceInfo" field values replace the corresponding attributes for the sending device if they are sent.

The optional "lifetime" field specifies the length of time in seconds within which the device must send another 'Manage device' request in order to avoid being reverted to an unmanaged device and marked as formant. If omitted or if set to 0, the managed device will not become dormant.

Optional "supports.deviceActions" and "supports.firmwareActions" indicate the capabilities of the device management agent. If "supports.deviceActions" is set, the agent supports Reboot and Factory Reset actions. For a device which does not distinguish between rebooting and factory reset, it is acceptable to use the same behaviour for both actions. If "supports.firmwareActions" is set, the agent supports Firmware Download and Firmware Update actions.

Example Request:

.. code:: 

	{
		"d": {
			"metadata":{},
			"lifetime": "number",
			"supports": {
				"deviceActions": "boolean",
				"firmwareActions": "boolean"
			},
			"deviceInfo": {
				"serialNumber": "string",
				"manufacturer": "string",
				"model": "string",
				"deviceClass": "string",
				"description" :"string",
				"fwVersion": "string",
				"hwVersion": "string",
				"descriptiveLocation": "string"
			}
		},
		"reqId": "string"
	}

			}
		}
	}
	
Example Response:

.. code::

	{
		"rc": 200,
		"reqId": "string"
	}
	
Unmanage Device
''''''''''''''''

A device uses this request when it no longer needs to be managed. The Internet of Things Foundation will no longer send new device management requests to this device and all device management requests from this device will be rejected other than a 'Manage device' request.

Topic
~~~~~~

.. code::

	iotdevice-1/mgmt/unmanaged
	
Message Format
~~~~~~~~~~~~~~~

Example Request:

.. code::
	{
		"reqId": "string"
	}
	
Example Response:

.. code:: 
	{
		"rc": 200,
		"reqId": "string"
	}
	
Update Location
''''''''''''''''

Devices that can determine their location can choose to notify the Internet of Things Foundation device management server about location changes.

Topic
~~~~~~

.. code::

	iotdevice-1/device/update/location
	
Message Format
~~~~~~~~~~~~~~~

All fields for this operation are optional. The "measuredDateTime" is the date of location measurement. The "updatedDateTime" is the date of the update to the device information. For efficiency reasons, IoTF may batch updates to location information so the updates may be slightly delayed. The "latitude" and "longitude" should be specified in decimal degrees using WGS84. 

Whenever location is updated, the values provided for latitude, longitude, elevation and uncertainty are considered as a single multi-value update. The latitude and longitude are mandatory and must both provided with each update, while the elevation and uncertainty are optional and can be omitted. If an optional value is provided on an update and then omitted on a later update, the earlier value is deleted by the later update. Each update is considered as a complete multi-value set.

Location can be updated in several ways:
- The device retrieves its location from a GPS receiver and sends a device management message to the Internet of Things Foundation to update its location. The timestamp captures the time at which the location was retrieved from the GPS receiver. This means that the timestamp is valid, even if the transmission of the location message was delayed. In the event that the timestamp is omitted from the device management message sent, the current date and time on message receipt will be used when the device's location metadata is updated.
- The Internet of Things Foundation REST API is used to set the location metadata of a static device. This can be done at the time that the device is registered, or later if required. It is optional whether to include a timestamp. If omitted, the current date and time will be set as the deviceâ€™s location metadata.

Example Request:

.. code::
	{
		"d": {
			"longitude": number,
			"latitude": number,
	
			"elevation": number,
			"measuredDateTime": "string in ISO8601 format",
			"updatedDateTime": "string in ISO8601 format",
			"accuracy": "The accuracy of the position"
		},
		"reqId": "string"
	}

Example Response:

.. code:: 
	{
		"rc": 200,
		"reqId": "string"
	}
	
Adding an error code
'''''''''''''''''''''

Devices can choose to notify the Internet of Things Foundation device management server about changes in their error status.

Topic
~~~~~~~

.. code:: 
	iotdevice-1/add/diag/errorCodes

Message Format
~~~~~~~~~~~~~~~

The "errorCode" is a current device error code that needs to be added to the Internet of Things Foundation.

Example Request:

.. code:: 

	{
		"d": {
			"errorCode": number
		},
		"reqId": "string"
	}


Example Response:

.. code::

	{
		"rc": 200,
		"reqId": "string"
	}

Clear Error Codes
''''''''''''''''''

Devices can request that the Internet of Things Foundation clear all of their error codes.

Topic
~~~~~~

.. code::
	iotdevice-1/clear/diag/errorCodes

Message Format
~~~~~~~~~~~~~~~

Example Request:

.. code:: 
	{
		"reqId": "string"
	}
	
Example Response:

.. code::
	{
		"rc": 200,
		"reqId": "string"
	}


Clear log entries
'''''''''''''''''''

Devices can request that the Internet of Things Foundation clear all of their log entries.

Topic
~~~~~~

.. code::

	iotdevice-1/clear/diag/log

Message format
~~~~~~~~~~~~~~~

Example Request:

.. code:: 

	{
		"reqId": "string"
	}
	
Example Response:

.. code::

	{
		"rc": 200,
		"reqId": "string"
	}
	
Observe device attributes
''''''''''''''''''''''''''

The Internet of Things Foundation can send this request to a device to observe changes of one or more device attributes. When device receives this request, it must send a notification request ("notify" message) to the Internet of Things Foundation whenever the observed attributes value changes.

Topic
~~~~~~

.. code:: 

	iotdm-1/observe

Message format
~~~~~~~~~~~~~~~

The "fields" field is an array of the device attribute names from the device model. For example, values could be "location", "mgmt.firmware" or "mgmt.firmware.state". If a complex field, such as "mgmt.firmware" is specified, it is expected that its underlying fields are updated at the same time, such that only a single notify message is generated.

The "message" field used in the response can be specified if "rc" is not 200. If any field value which was to be observed could not be retrieved, "rc" should be set to 404 (if not found) or 500 (any other reason). When values for fields to be observed cannot be found, "fields" should contain an array of elements with "field" set to the name of each field that could not be read, "value" fields should be omitted. For the response code to be set to 200, both "field" and "value" must be specified, "value" is the current value of an attribute identified by "field" content.

This operation must be supported in order to support firmware update.

Example Request:

.. code::

	{
		"d": {
			"fields": [
				"string"
			]
		},
		"reqId": "string"
	}

Example Response:

.. code::

	{
		"rc": number,
		"message": "string",
		"d": {
			"fields": [
				{ 
					"field": "field_name",
					"value": "field_value"
				}
			]
		},
		"reqId": "string"  
	}

Notify attribute changes
'''''''''''''''''''''''''

The Internet of Things Foundation can make an observation request referring to a specific attribute or set of values. When the value of the attribute or attributes changes, the device must send a notification containing the latest value.

The "field_name" value is the name of the attribute that has changed, the "field_value" is the current value of the attribute. The attribute can be a complex field, if multiple values in a complex field are updated as a result of a single operation, only a single notification message should be sent.

If notify request is processed successfully, "rc" should be set to 200. If the request is not correct, "rc" should be set to 400. If the field specified in the notify request is not being observed, "rc" should be set to 404.


Topic
~~~~~~

.. code::

	iotdevice-1/notify
	
Message format
~~~~~~~~~~~~~~~

Example Request:

.. code::

	{
		"d": {
			"field": "field_name",
			"value": "field_value"
		}
		"reqId": "string"
	}
	
Example Response:

.. code::

	{
		"rc": number,
		"reqId": "string"
	}

Update device attributes
''''''''''''''''''''''''''

The Internet of Things Foundation can send this request to a device to update values of one or more device attributes. Attributes that can be updated by this operation are location, metadata, device information and firmware.

The "value" is the new value of the device attribute. It is a complex field matching the device model. Only writeable fields should be updated as a result of this operation. Values can be updated in:
- location (see Update location section for details)
- metadata (Optional)
- deviceInfo (Optional)
- mgmt.firmware	(see Firmware update process for details)

If the update is successful, the "rc" should be set to 204. The "message" field can be specified if "rc" is not 204. If any field value could not be retrieved, "rc" should be set to 404 (if not found) or 500 (any other reason). The "fields" array should contain the name of each field that could not be updated.

Topic
~~~~~~

.. code:: 

	iotdm-1/device/update

	
Message format
~~~~~~~~~~~~~~~

Example Request:

.. code:: 

	{
		"d": {
			"field": "field_name"
			"value": "field_value"
		},
		"reqId": "string"
	}


Example Response:

.. code::

	{
		"rc": number,
		"message": "string",
		"d": {
			"fields": [
				"string"
			]
		},
		"reqId": "string"
	}

	
	
Cancel observation
'''''''''''''''''''

The Internet of Things Foundation can send this request to a device to cancel the current observation of one or more device attributes. The "fields" is an array of the device attribute names from the device model, for example, values could be "location", "mgmt.firmware" or "mgmt.firmware.state".

The "message" field should be specified if "rc" is not 200. This operation must be supported in order to support firmware update.

Topic
~~~~~~

.. code::

	iotdm-1/cancel


Message format
~~~~~~~~~~~~~~~~

Example Request:

.. code::

	{
		"d": {
			"fields": [
				"string"
			]
		},
		"reqId": "string"
	}

Example Response:

.. code:: 

	{
		"rc": number,
		"message": "string",
		"reqId": "string"  
	}

Initiate reboot
''''''''''''''''

The Internet of Things Foundation can send this request to reboot a device. The action is considered complete when the device sends a Manage device request following its reboot.
	
If this operation can be initiated immediately, set "rc" to 202, if reboot attempt fails, the "rc" is set to 500 and the "message" field should be set accordingly, if the reboot is not supported, set "rc" to 501 and optionally set "message" accordingly.


Topic
~~~~~~

.. code:: 

	iotdm-1/mgmt/initiate/device/reboot

	
Message format
~~~~~~~~~~~~~~~

Example Request:

.. code:: 

	{
		"reqId": "string"
	}
Example Response:

.. code::

	{
		"rc": "response_code",
		"message": "string",
		"reqId": "string"
	}

Initiate factory reset
'''''''''''''''''''''''

The Internet of Things Foundation can send this request to reset the device to factory settings, as part of this process, the device also reboots. The action is considered complete when the device sends a Manage device request following its reboot.

The response code should be 202 if this action can be initiated immediately. If the factory reset attempt fails, the "rc" should be 500 and the "message" field should be set accordingly, if the factory reset action is not supported, set "rc" to 501 and optionally set "message" accordingly.

Topic
~~~~~~

.. code::

	iotdm-1/mgmt/initiate/device/factory_reset


Message format
~~~~~~~~~~~~~~~

Example Request:

.. code::

	{
		"reqId": "string"
	}

Example Response:

.. code::

	{
		"rc": "response_code",
		"message": "string",
		"reqId": "string"
	}

Initiate firmware download
''''''''''''''''''''''''''''

The Internet of Things Foundation can send this request to download new firmware onto the device. The firmware update process is described in more detail in the corresponding section. The firmware download action is considered complete when the device sends a Notify attribute change request for the "mgmt.firmware.state" attribute reaching a final value, usually "Downloaded" for a successful download.

If the action can be initiated immediately, set "rc" to 202. If "mgmt.firmware.url" is not set or is not a valid URL, set "rc" to 400. If firmware download attempt fails, set "rc" to 500 and optionally set "message" accordingly. If firmware download is not supported, set "rc" to 501 and optionally set "message" accordingly.


Topic
~~~~~~

.. code::

	iotdm-1/mgmt/initiate/firmware/download

Message format
~~~~~~~~~~~~~~~

Example Request:

.. code::

	{
		"reqId": "string"
	}

	
Example Response:

.. code::

	{
		"rc": "response_code",
		"message": "string",
		"reqId": "string"
	}

Initiate firmware update
''''''''''''''''''''''''''

The Internet of Things Foundation sends this request to update the firmware on the device. See the detailed description of the firmware update process in the corresponding section. IoTF considers the action completed when the device sends a Notify attribute change request of the "mgmt.firmware.updateStatus" attribute reaching a final value, usually "Success" for a successful update.

If this operation can be initiated immediately, "rc" should be set to 202. If firmware was not previously downloaded successfully, "rc" should be set to 400. If firmware update attempt fails, "rc" should be set to 500 and the "message" field can optionally be set to contain relevant information. If firmware update is not supported, "rc" should be set to 501 and the "message" field can optionally be set to contain relevant information.

Topic
~~~~~~

.. code::

	iotdm-1/mgmt/initiate/firmware/update

	
Message format
~~~~~~~~~~~~~~~

Example Request:

.. code::

	{
		"reqId": "string"
	}

Example Response:

.. code::

	{
		"rc": "response_code",
		"message": "string",
		"reqId": "string"
	}